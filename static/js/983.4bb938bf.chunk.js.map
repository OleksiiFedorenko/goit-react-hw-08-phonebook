{"version":3,"file":"static/js/983.4bb938bf.chunk.js","mappings":"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","sources":["components/Title/Title.styled.jsx","components/Title/Title.jsx","redux/contacts/selectors.js","components/NewContactForm/NewContactForm.styled.jsx","components/NewContactForm/NewContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/NoContacts/NoContacts.styled.jsx","components/NoContacts/NoContacts.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MainTitle = styled.h1`\n  margin-top: 0;\n`;\n\nexport const SecondaryTitle = styled.h2``;\n","import PropTypes from 'prop-types';\nimport { MainTitle, SecondaryTitle } from './Title.styled';\n\nconst Title = ({ mainTitle, title }) => {\n  return mainTitle ? (\n    <MainTitle>{mainTitle}</MainTitle>\n  ) : (\n    <SecondaryTitle>{title}</SecondaryTitle>\n  );\n};\n\nTitle.propTypes = {\n  mainTitle: PropTypes.string,\n  title: PropTypes.string,\n};\n\nexport default Title;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const ContactForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: baseline;\n  gap: 15px;\n\n  padding: 10px;\n\n  width: 360px;\n\n  border-radius: 4px;\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: baseline;\n  gap: 5px;\n\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const Input = styled(Field)`\n  padding: 4px 6px;\n  font-size: 14px;\n  border: 1px solid grey;\n  border-radius: 4px;\n  &:focus {\n    outline: 1px solid #1d65b8;\n  }\n`;\n\nexport const Button = styled.button`\n  background: linear-gradient(to bottom right, #4782ef, #5ad0ff);\n  border: 0;\n  border-radius: 6px;\n  color: #fff;\n  cursor: pointer;\n  font-family: -apple-system, system-ui, 'Segoe UI', Roboto, Helvetica, Arial,\n    sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 2.5;\n  outline: transparent;\n  padding: 0 1rem;\n  text-align: center;\n  transition: box-shadow 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 0 0.25rem rgba(0, 0, 0, 0.5),\n      -0.125rem -0.125rem 1rem rgba(71, 110, 239, 0.5),\n      0.125rem 0.125rem 1rem rgba(90, 208, 255, 0.5);\n  }\n\n  &:active {\n    background: linear-gradient(to bottom right, #5ad0ff, #4782ef);\n  }\n`;\n\nexport const FormError = styled(ErrorMessage)`\n  color: #ec3434;\n  font-size: 16px;\n  font-weight: 400;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { toast } from 'react-toastify';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  ContactForm,\n  Label,\n  Input,\n  FormError,\n  Button,\n} from './NewContactForm.styled';\n\nconst nameRegex =\n  /^[a-zA-Zа-яґєіїА-ЯҐЄІЇ]+(([' -][a-zA-Zа-яґєіїА-ЯҐЄІЇ ])?[a-zA-Zа-яґєіїА-ЯҐЄІЇ]*)*$/;\nconst nameWarningMessage =\n  \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\";\nconst phoneRegex =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\nconst phoneWarningMessage =\n  'Phone number must be at least 5 digits and can contain spaces, dashes, parentheses and can start with +';\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(nameRegex, nameWarningMessage)\n    .required('Please add name'),\n  phone: yup\n    .string()\n    .matches(phoneRegex, phoneWarningMessage)\n    .required('Please add phone number'),\n});\n\nconst NewContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = ({ name, phone }, { resetForm }) => {\n    const normalizedName = name.toLowerCase();\n    if (\n      contacts.some(contact => contact.name.toLowerCase() === normalizedName)\n    ) {\n      toast.warn(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact({ name, phone }));\n    toast.success(`${name} is added to contacts.`);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', phone: '' }}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <ContactForm>\n        <Label>\n          Name\n          <Input type=\"text\" name=\"name\" />\n          <FormError name=\"name\" component=\"div\" />\n        </Label>\n\n        <Label>\n          Phone number\n          <Input type=\"tel\" name=\"phone\" />\n          <FormError name=\"phone\" component=\"div\" />\n        </Label>\n\n        <Button type=\"submit\">Add contact</Button>\n      </ContactForm>\n    </Formik>\n  );\n};\n\nexport default NewContactForm;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: baseline;\n  gap: 5px;\n\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  padding: 4px 6px;\n  font-size: 14px;\n  border: 1px solid grey;\n  border-radius: 4px;\n  &:focus {\n    outline: 1px solid #1d65b8;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { Label, Input } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" value={filter} onChange={handleFilterChange} />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  margin-left: 12px;\n  background: linear-gradient(to bottom right, #ef474753, #ff975a53);\n  border: 0;\n  border-radius: 4px;\n  color: #000;\n  cursor: pointer;\n  font-family: -apple-system, system-ui, 'Segoe UI', Roboto, Helvetica, Arial,\n    sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.5;\n  outline: transparent;\n  padding: 0 0.75rem;\n  text-align: center;\n  transition: box-shadow 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: #fff;\n    background: linear-gradient(to bottom right, #ef4747, #ff975a);\n    box-shadow: 0 0 0.25rem rgba(0, 0, 0, 0.5),\n      -0.125rem -0.125rem 1rem rgba(239, 71, 71, 0.5),\n      0.125rem 0.125rem 1rem rgba(255, 137, 90, 0.5);\n  }\n\n  &:active {\n    color: #fff;\n    background: linear-gradient(to bottom right, #ff975a, #ef4747);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { toast } from 'react-toastify';\nimport { Button } from './ContactListItem.styled';\n\nconst ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const { id, name, phone } = contact;\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n    toast.error(`${name} was removed from contacts.`);\n  };\n\n  return (\n    <>\n      {name}: {phone}\n      <Button type=\"button\" onClick={handleDelete}>\n        Delete\n      </Button>\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ContactListItem;\n","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  color: #ec3434;\n`;\n","import PropTypes from 'prop-types';\nimport { Message } from './NoContacts.styled';\n\nconst NoContacts = ({ message }) => {\n  return <Message>{message}</Message>;\n};\n\nNoContacts.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default NoContacts;\n","import styled from 'styled-components';\n\nexport const ContactsContainer = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: baseline;\n  gap: 5px;\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n  selectFilteredContacts,\n} from 'redux/contacts/selectors';\nimport ContactListItem from 'components/ContactListItem/ContactListItem';\nimport Loader from 'components/Loader/Loader';\nimport NoContacts from 'components/NoContacts/NoContacts';\nimport { ContactsContainer } from './ContactList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  if (isLoading) return <Loader />;\n\n  if (error) {\n    return (\n      <NoContacts message=\"Something went wrong, please try again later\" />\n    );\n  }\n\n  if (filteredContacts.length === 0) {\n    return (\n      <NoContacts\n        message={contacts.length > 0 ? 'No contacts found' : 'No contacts yet'}\n      />\n    );\n  }\n\n  return (\n    <ContactsContainer>\n      {filteredContacts.map(contact => (\n        <li key={contact.id}>\n          <ContactListItem contact={contact} />\n        </li>\n      ))}\n    </ContactsContainer>\n  );\n};\n\nexport default ContactList;\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport Title from 'components/Title/Title';\nimport NewContactForm from 'components/NewContactForm/NewContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nconst Contacts = () => {\n  const [notFirstRender, setNotFirstRender] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setNotFirstRender(true);\n  }, []);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Title mainTitle=\"Phonebook\" />\n      <NewContactForm />\n\n      <Title title=\"Contacts\" />\n      <Filter />\n      {notFirstRender && <ContactList />}\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["MainTitle","styled","SecondaryTitle","mainTitle","title","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","ContactForm","Form","Label","Input","Field","Button","FormError","ErrorMessage","validationSchema","yup","shape","matches","required","phone","dispatch","useDispatch","useSelector","initialValues","onSubmit","resetForm","normalizedName","some","toast","addContact","type","component","value","onChange","e","setFilter","target","id","onClick","deleteContact","Message","message","ContactsContainer","filteredContacts","Loader","length","map","useState","notFirstRender","setNotFirstRender","useEffect","fetchContacts"],"sourceRoot":""}