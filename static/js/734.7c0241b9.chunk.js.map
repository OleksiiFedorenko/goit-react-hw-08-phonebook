{"version":3,"file":"static/js/734.7c0241b9.chunk.js","mappings":"0OAcMA,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAEJG,QAVH,yJAC0B,4BAUvBC,SAAS,2BACZC,SAAUL,EAAAA,KAEPG,QAViB,QACS,0CAU1BC,SAAS,gCAoCd,EAjCkB,WAChB,IAAME,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC,KAAD,CACEC,cAAe,CAAEN,MAAO,GAAIG,SAAU,IACtCN,iBAAkBA,EAClBU,SATiB,SAACC,EAAD,GAAiC,IAAjBC,EAAgB,EAAhBA,UACnCL,GAASM,EAAAA,EAAAA,IAAMF,IACfC,GACD,EAGC,UAKE,UAAC,KAAD,YACE,6BAAO,SAEL,SAAC,KAAD,CAAOE,KAAK,QAAQC,KAAK,WACzB,SAAC,KAAD,CAAcA,KAAK,QAAQC,UAAU,YAGvC,6BAAO,YAEL,SAAC,KAAD,CAAOF,KAAK,OAAOC,KAAK,cACxB,SAAC,KAAD,CAAcA,KAAK,WAAWC,UAAU,YAG1C,mBAAQF,KAAK,SAAb,SAAsB,eAI7B,EClDD,EAJc,WACZ,OAAO,SAAC,EAAD,GACR,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nimport { logIn } from 'redux/auth/authOperations';\n\nconst emailRegex =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nconst emailWarningMessage = 'Please enter valid email';\n// password regex: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/\n// 8 characters: at least one digit, one lower case, one upper case\nconst passwordRegex = /.{8,}/;\nconst passwordWarningMessage = 'Password must be at least 8 characters';\n\nconst validationSchema = yup.object().shape({\n  email: yup\n    .string()\n    .matches(emailRegex, emailWarningMessage)\n    .required('Please enter your email'),\n  password: yup\n    .string()\n    .matches(passwordRegex, passwordWarningMessage)\n    .required('Please enter your password'),\n});\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (credentials, { resetForm }) => {\n    dispatch(logIn(credentials));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <label>\n          Email\n          <Field type=\"email\" name=\"email\" />\n          <ErrorMessage name=\"email\" component=\"div\" />\n        </label>\n\n        <label>\n          Password\n          <Field type=\"text\" name=\"password\" />\n          <ErrorMessage name=\"password\" component=\"div\" />\n        </label>\n\n        <button type=\"submit\">Log in</button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return <LoginForm />;\n};\n\nexport default Login;\n"],"names":["validationSchema","yup","shape","email","matches","required","password","dispatch","useDispatch","initialValues","onSubmit","credentials","resetForm","logIn","type","name","component"],"sourceRoot":""}