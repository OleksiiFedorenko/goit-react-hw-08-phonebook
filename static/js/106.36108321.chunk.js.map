{"version":3,"file":"static/js/106.36108321.chunk.js","mappings":"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","sources":["components/Title/Title.styled.jsx","components/Title/Title.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/NewContactForm/NewContactForm.styled.jsx","components/NewContactForm/NewContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/NoContacts/NoContacts.styled.jsx","components/NoContacts/NoContacts.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MainTitle = styled.h1`\n  margin-top: 0;\n`;\n\nexport const SecondaryTitle = styled.h2``;\n","import PropTypes from 'prop-types';\nimport { MainTitle, SecondaryTitle } from './Title.styled';\n\nconst Title = ({ mainTitle, title }) => {\n  return mainTitle ? (\n    <MainTitle>{mainTitle}</MainTitle>\n  ) : (\n    <SecondaryTitle>{title}</SecondaryTitle>\n  );\n};\n\nTitle.propTypes = {\n  mainTitle: PropTypes.string,\n  title: PropTypes.string,\n};\n\nexport default Title;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const ContactForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: baseline;\n  gap: 15px;\n\n  padding: 10px;\n\n  width: 360px;\n\n  border-radius: 4px;\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: baseline;\n  gap: 5px;\n\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const Input = styled(Field)`\n  padding: 4px 6px;\n  font-size: 14px;\n  border: 1px solid grey;\n  border-radius: 4px;\n  &:focus {\n    outline: 1px solid #1d65b8;\n  }\n`;\n\nexport const Button = styled.button`\n  background: linear-gradient(to bottom right, #4782ef, #5ad0ff);\n  border: 0;\n  border-radius: 6px;\n  color: #fff;\n  cursor: pointer;\n  font-family: -apple-system, system-ui, 'Segoe UI', Roboto, Helvetica, Arial,\n    sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 2.5;\n  outline: transparent;\n  padding: 0 1rem;\n  text-align: center;\n  transition: box-shadow 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 0 0.25rem rgba(0, 0, 0, 0.5),\n      -0.125rem -0.125rem 1rem rgba(71, 110, 239, 0.5),\n      0.125rem 0.125rem 1rem rgba(90, 208, 255, 0.5);\n  }\n\n  &:active {\n    background: linear-gradient(to bottom right, #5ad0ff, #4782ef);\n  }\n`;\n\nexport const FormError = styled(ErrorMessage)`\n  color: #ec3434;\n  font-size: 16px;\n  font-weight: 400;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport {\n  ContactForm,\n  Label,\n  Input,\n  FormError,\n  Button,\n} from './NewContactForm.styled';\n\nconst nameRegex =\n  /^[a-zA-Zа-яґєіїА-ЯҐЄІЇ]+(([' -][a-zA-Zа-яґєіїА-ЯҐЄІЇ ])?[a-zA-Zа-яґєіїА-ЯҐЄІЇ]*)*$/;\nconst nameWarningMessage =\n  \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\";\nconst numberRegex =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\nconst numberWarningMessage =\n  'Phone number must be at least 5 digits and can contain spaces, dashes, parentheses and can start with +';\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(nameRegex, nameWarningMessage)\n    .required('Please add name'),\n  number: yup\n    .string()\n    .matches(numberRegex, numberWarningMessage)\n    .required('Please add phone number'),\n});\n\nconst NewContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    const normalizedName = name.toLowerCase();\n    if (\n      contacts.some(contact => contact.name.toLowerCase() === normalizedName)\n    ) {\n      toast.warn(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    toast.success(`${name} is added to contacts.`);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <ContactForm>\n        <Label>\n          Name\n          <Input type=\"text\" name=\"name\" />\n          <FormError name=\"name\" component=\"div\" />\n        </Label>\n\n        <Label>\n          Phone number\n          <Input type=\"tel\" name=\"number\" />\n          <FormError name=\"number\" component=\"div\" />\n        </Label>\n\n        <Button type=\"submit\">Add contact</Button>\n      </ContactForm>\n    </Formik>\n  );\n};\n\nexport default NewContactForm;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: baseline;\n  gap: 5px;\n\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  padding: 4px 6px;\n  font-size: 14px;\n  border: 1px solid grey;\n  border-radius: 4px;\n  &:focus {\n    outline: 1px solid #1d65b8;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { Label, Input } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" value={filter} onChange={handleFilterChange} />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  margin-left: 12px;\n  background: linear-gradient(to bottom right, #ef474753, #ff975a53);\n  border: 0;\n  border-radius: 4px;\n  color: #000;\n  cursor: pointer;\n  font-family: -apple-system, system-ui, 'Segoe UI', Roboto, Helvetica, Arial,\n    sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.5;\n  outline: transparent;\n  padding: 0 0.75rem;\n  text-align: center;\n  transition: box-shadow 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: #fff;\n    background: linear-gradient(to bottom right, #ef4747, #ff975a);\n    box-shadow: 0 0 0.25rem rgba(0, 0, 0, 0.5),\n      -0.125rem -0.125rem 1rem rgba(239, 71, 71, 0.5),\n      0.125rem 0.125rem 1rem rgba(255, 137, 90, 0.5);\n  }\n\n  &:active {\n    color: #fff;\n    background: linear-gradient(to bottom right, #ff975a, #ef4747);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { toast } from 'react-toastify';\nimport { Button } from './ContactListItem.styled';\n\nconst ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const { id, name, number } = contact;\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n    toast.error(`${name} was removed from contacts.`);\n  };\n\n  return (\n    <>\n      {name}: {number}\n      <Button type=\"button\" onClick={handleDelete}>\n        Delete\n      </Button>\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ContactListItem;\n","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  color: #ec3434;\n`;\n","import PropTypes from 'prop-types';\nimport { Message } from './NoContacts.styled';\n\nconst NoContacts = ({ message }) => {\n  return <Message>{message}</Message>;\n};\n\nNoContacts.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default NoContacts;\n","import styled from 'styled-components';\n\nexport const ContactsContainer = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: baseline;\n  gap: 5px;\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n  selectFilteredContacts,\n} from 'redux/contacts/selectors';\nimport ContactListItem from 'components/ContactListItem/ContactListItem';\nimport Loader from 'components/Loader/Loader';\nimport NoContacts from 'components/NoContacts/NoContacts';\nimport { ContactsContainer } from './ContactList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  if (isLoading) return <Loader />;\n\n  if (error) {\n    return (\n      <NoContacts message=\"Something went wrong, please try again later\" />\n    );\n  }\n\n  if (filteredContacts.length === 0) {\n    return (\n      <NoContacts\n        message={contacts.length > 0 ? 'No contacts found' : 'No contacts yet'}\n      />\n    );\n  }\n\n  return (\n    <ContactsContainer>\n      {filteredContacts.map(contact => (\n        <li key={contact.id}>\n          <ContactListItem contact={contact} />\n        </li>\n      ))}\n    </ContactsContainer>\n  );\n};\n\nexport default ContactList;\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport Title from 'components/Title/Title';\nimport NewContactForm from 'components/NewContactForm/NewContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nconst Contacts = () => {\n  const [notFirstRender, setNotFirstRender] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setNotFirstRender(true);\n  }, []);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Title mainTitle=\"Phonebook\" />\n      <NewContactForm />\n\n      <Title title=\"Contacts\" />\n      <Filter />\n      {notFirstRender && <ContactList />}\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["MainTitle","styled","SecondaryTitle","mainTitle","title","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","normalizedFilter","toLowerCase","contact","includes","ContactForm","Form","Label","Input","Field","Button","FormError","ErrorMessage","validationSchema","yup","shape","matches","required","number","dispatch","useDispatch","useSelector","initialValues","onSubmit","resetForm","normalizedName","some","toast","addContact","type","component","onChange","e","setFilter","target","id","onClick","deleteContact","Message","message","ContactsContainer","filteredContacts","Loader","useState","notFirstRender","setNotFirstRender","useEffect","fetchContacts"],"sourceRoot":""}