{"version":3,"file":"static/js/915.bf3390fa.chunk.js","mappings":"0OAmBMA,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,KAAMF,EAAAA,KAEHG,QAfH,yQAEA,0HAcGC,SAAS,0BACZC,MAAOL,EAAAA,KAEJG,QAfH,yJAEA,wJAcGC,SAAS,2BACZE,SAAUN,EAAAA,KAEPG,QAdiB,QACS,0CAc1BC,SAAS,gCA0Cd,EAvCqB,WACnB,IAAMG,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC,KAAD,CACEC,cAAe,CAAEP,KAAM,GAAIG,MAAO,GAAIC,SAAU,IAChDP,iBAAkBA,EAClBW,SATiB,SAACC,EAAD,GAAiC,IAAjBC,EAAgB,EAAhBA,UACnCL,GAASM,EAAAA,EAAAA,IAASF,IAClBC,GACD,EAGC,UAKE,UAAC,KAAD,YACE,6BAAO,QAEL,SAAC,KAAD,CAAOE,KAAK,OAAOZ,KAAK,UACxB,SAAC,KAAD,CAAcA,KAAK,OAAOa,UAAU,YAGtC,6BAAO,SAEL,SAAC,KAAD,CAAOD,KAAK,QAAQZ,KAAK,WACzB,SAAC,KAAD,CAAcA,KAAK,QAAQa,UAAU,YAGvC,6BAAO,YAEL,SAAC,KAAD,CAAOD,KAAK,OAAOZ,KAAK,cACxB,SAAC,KAAD,CAAcA,KAAK,WAAWa,UAAU,YAG1C,mBAAQD,KAAK,SAAb,SAAsB,iBAI7B,ECjED,EAJiB,WACf,OAAO,SAAC,EAAD,GACR,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nimport { register } from 'redux/auth/authOperations';\n\nconst nameRegex =\n  /^[a-zA-Zа-яґєіїА-ЯҐЄІЇ]+(([' -][a-zA-Zа-яґєіїА-ЯҐЄІЇ ])?[a-zA-Zа-яґєіїА-ЯҐЄІЇ]*)*$/;\nconst nameWarningMessage =\n  \"Name may contain only letters, apostrophe, dash and spaces. For example Jacob Mercer, Charles de Castelmore d'Artagnan\";\nconst emailRegex =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nconst emailWarningMessage =\n  \"Email address must include letters/digits, '@' symbol, and valid domain. Periods, underscores, hyphens can be also used. For example email@gmail.com\";\n// password regex: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/\n// 8 characters: at least one digit, one lower case, one upper case\nconst passwordRegex = /.{8,}/;\nconst passwordWarningMessage = 'Password must be at least 8 characters';\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(nameRegex, nameWarningMessage)\n    .required('Please enter your name'),\n  email: yup\n    .string()\n    .matches(emailRegex, emailWarningMessage)\n    .required('Please enter your email'),\n  password: yup\n    .string()\n    .matches(passwordRegex, passwordWarningMessage)\n    .required('Please enter your password'),\n});\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (credentials, { resetForm }) => {\n    dispatch(register(credentials));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <label>\n          Name\n          <Field type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"div\" />\n        </label>\n\n        <label>\n          Email\n          <Field type=\"email\" name=\"email\" />\n          <ErrorMessage name=\"email\" component=\"div\" />\n        </label>\n\n        <label>\n          Password\n          <Field type=\"text\" name=\"password\" />\n          <ErrorMessage name=\"password\" component=\"div\" />\n        </label>\n\n        <button type=\"submit\">Register</button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return <RegisterForm />;\n};\n\nexport default Register;\n"],"names":["validationSchema","yup","shape","name","matches","required","email","password","dispatch","useDispatch","initialValues","onSubmit","credentials","resetForm","register","type","component"],"sourceRoot":""}